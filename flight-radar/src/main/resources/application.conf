kafka {
  producer {
    producer.acks = "all"
    bootstrap.servers = "broker:29092"
    bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}

    schema.registry.url = "http://schema-registry:8081"
    schema.registry.url = ${?KAFKA_SCHEMA_REGISTRY_URL}

    key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
    value.serializer = "io.confluent.kafka.serializers.KafkaAvroSerializer"

    value.subject.name.strategy = "io.confluent.kafka.serializers.subject.RecordNameStrategy"
  }
  topic {
    compression.type = "gzip"
    min.insync.replicas = 1
  }
}
flight-radar {
  topic {
    flight-update-event = "radar.flight.update.events"
    flight-update-event = ${?FLIGHT_UPDATE_EVENT_TOPIC}

    airport-update-event = "radar.airport.update.events"
    airport-update-event =  ${?AIRPORT_UPDATE_EVENT_TOPIC}
  }
  airport-input-file = "airports.csv"
  airport-input-file = ${?AIRPORTS_INPUT_FILE}
}